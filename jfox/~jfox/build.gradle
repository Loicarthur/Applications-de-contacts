//-------
// Ressources extenres
//-------
plugins {
    id 'java-library'
    id 'org.openjfx.javafxplugin'  
    id 'eclipse'
}

repositories {
    mavenCentral()
}


//-------
// Java
//-------

// Jar
archivesBaseName = 'jfox'
version = '2023-03'

// Version de Java
java.toolchain.languageVersion = JavaLanguageVersion.of(11)

// Encodage des fichiers
compileJava.options.encoding = 'UTF-8'

// Dossiers sources
sourceSets {
	main.java.srcDirs = ['src']
	main.resources.srcDirs = ['src']
}


//-------
// Dépendances
//-------

javafx {
    version = "19.0.2.1"
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing' ]
}

dependencies {

	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	implementation 'jakarta.inject:jakarta.inject-api:2.0.1'
	
	implementation('net.sf.jasperreports:jasperreports:6.20.0') {
		exclude group: '*'
	}
}

compileJava {
    inputs.property("moduleName", "jasperreports" )
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath,
        ]
        classpath = files()  
    }
}


//-------
// Eclipse
//-------

// Nature Gradle
eclipse.project.natures 'org.eclipse.buildship.core.gradleprojectnature'

// Dossier de sortie
eclipse.classpath.defaultOutputDir = file('build/bin') 
eclipse.classpath.file.whenMerged { 
	entries.each { 
		entry -> if (entry.kind == 'src' && entry.hasProperty('output')) {
			entry.output = null
		}
	}
}
delete 'bin'

// Utilisation des modules Java
eclipse.classpath.file.whenMerged { 
	entries.each { 
		entry -> if (entry.kind == 'lib' || entry.kind == 'src' || entry.kind == 'con') {
			entry.entryAttributes['module'] = 'true' 
		}
	}
}


//-------
// Tâches auxiliaires
//-------

// Copie les dépendances
task copyDep() {
	doLast {
		delete("${buildDir}/dependencies")
		copy {
			from configurations.runtimeClasspath 
			into 'build/dependencies'
		}
	}
}

