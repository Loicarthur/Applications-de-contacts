<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
    01/2023

     pg-change-password
     Modifier le mot de passe du compte administrateur d'une base PostgreSQL

     E. Amblard
     ====================================================================== -->

<project name="pg-change-password" default="change-pwd">
    <description>
            Modifier le mot de passe du compte administrateur d'une base PostgreSQL
    </description>

	
	<!-- Choix de la version de PostgreSQL -->
	
	<input message="Version de PostgreSQL ?"
		defaultvalue="14"
		validargs="16,15,14,13,12"
		addproperty="pg.version"
	/>
	
	<!-- Choix du n° de port -->
	
	<input message="N° de port ?"
		addproperty="pg.port"
		defaultvalue="5432"
	/>
	
	<!-- Choix du nouveau mot de passe -->
	
	<input message="Nouveau mot de passe ?"
		addproperty="pg.password"
		defaultvalue="postgres"
	/>

	
	<!-- Paramètres globaux du traitement -->
	
	<property name="pg.host" 	 value="localhost" />
	<property name="pg.database" value="postgres" />
	<property name="pg.user"     value="postgres" />
	
	<property name="pg.dir.home" location="C:/Program Files/PostgreSQL/${pg.version}" />
	<property name="pg.dir.bin"  location="${pg.dir.home}/bin" />
	<property name="pg.dir.data" location="${pg.dir.home}/data" />

	
	<!-- Tests avant exécution -->
	
	<condition property="flag.dir.not.foud" >
		<not><available file="${pg.dir.home}" /></not>
	</condition>
	<fail if="${flag.dir.not.foud}" message="."  >
		${line.separator}Le dossier n'existe pas : ${pg.dir.home} 
	</fail>
	
	<condition property="flag.pg.started">
		<available file="${pg.dir.data}/postmaster.pid" />
	</condition>
	<fail if="${flag.pg.started}" message="."  >		
		${line.separator}Veuillez arrêter PostgreSQL au préalable
	</fail>
	

    <!-- ================================= 
          target: change-pwd              
         ================================= -->
    <target name="change-pwd" description="Modifier le mot de passe du compte administrateur d'une base PostgreSQL">

    	
    	<!-- Sauvegarde du fichier de configuraiton -->
    	
    	<copy file="${pg.dir.data}/pg_hba.conf" 
    		tofile="${pg.dir.data}/pg_hba.conf.bak"
    		overwrite="true"
    	/>
    	
    	
    	<!-- Supprime l'authentification par moot de passe  -->
    	
    	<replace file="${pg.dir.data}/pg_hba.conf" 
    		token="md5" 
    		value="trust" 
    	/>
    	<replace file="${pg.dir.data}/pg_hba.conf" 
    		token="scram-sha-256" 
    		value="trust" 
    	/>

    	
    	<!-- Démarre PostgreSQL -->
    	
    	<exec executable="${pg.dir.bin}/pg_ctl" resultproperty="result.start" >
    		<arg value="start"/>
    		<arg value="-D" />
    		<arg path="${pg.dir.data}" />
    	</exec>

    	
    	<!-- Change le mot de passe du compte administrateur -->
 
    	<exec executable="${pg.dir.bin}/psql" resultproperty="result.psql" >
    		<arg value="--host=${pg.host}" />
    		<arg value="--port=${pg.port}" />
    		<arg value="--dbname=${pg.database}" />
    		<arg value="--username=${pg.user}" />
       		<arg value="-c" />
       		<arg value="ALTER USER ${pg.user} WITH PASSWORD '${pg.password}'" />
    	</exec>

    	
    	<!-- Arrête PostgreSQL -->
    	
    	<exec executable="${pg.dir.bin}/pg_ctl" resultproperty="result.stop" >
    		<arg value="stop"/>
    		<arg value="--mode=immediate" />
    		<arg value="--pgdata=${pg.dir.data}" />
    	</exec>

    	
    	<!-- Restaure la sauvegarde du fichier de configuraiton -->
    	<!-- pour rétablir l'authentification par mot de passe -->
    	
    	<move file="${pg.dir.data}/pg_hba.conf.bak" 
    		tofile="${pg.dir.data}/pg_hba.conf"
    		overwrite="true" 
    	/>
    	
    	
    	<!-- Identifiaction d'un éventuel échec -->
    	
		<condition property="error.start">
			<not><equals arg1="0" arg2="${result.start}" /></not>
    	</condition>    	
		<condition property="error.psql">
			<not><equals arg1="0" arg2="${result.psql}" /></not>
    	</condition>    	
		<condition property="error.stop">
			<not><equals arg1="0" arg2="${result.stop}" /></not>
    	</condition>    	
    	
    	<fail if="${error.start}" message="."  >		
    		${line.separator}Erreur pendant start
    	</fail>
    	<fail if="${error.psql}" message="."  >		
    		${line.separator}Erreur pendant psql
    	</fail>
    	<fail if="${error.stop}" message="."  >		
    		${line.separator}Erreur pendant stop
    	</fail>
    	
    </target>

</project>
